package com.e1i6.notionable.domain.paymenttest;import javax.servlet.http.HttpServletRequest;import org.springframework.security.core.Authentication;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import com.e1i6.notionable.domain.paymenttest.dto.PaymentFailDto;import com.e1i6.notionable.domain.paymenttest.dto.PaymentConfirmDto;import com.e1i6.notionable.domain.paymenttest.service.PaymentService;import com.e1i6.notionable.global.common.response.BaseResponse;import com.e1i6.notionable.global.common.response.ResponseCode;import com.e1i6.notionable.global.common.response.ResponseException;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;@Slf4j@RestController@RequiredArgsConstructor@RequestMapping(value = "/payments")public class PaymentController {	private final PaymentService paymentService;	@PostMapping(value = "/confirm")	public BaseResponse<PaymentConfirmDto> paymentConfirm(		HttpServletRequest httpServletRequest,		@RequestParam(value = "orderId") String orderId,		@RequestParam(value = "amount") Integer amount,		@RequestParam(value = "paymentKey") String paymentKey) throws Exception {		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();		Long userId = Long.parseLong(authentication.getName());		log.info("orderId: {}", orderId);		log.info("amount: {}", amount);		log.info("paymentKey: {}", paymentKey);		try {			PaymentConfirmDto paymentResDto = paymentService.paymentSuccess(userId, orderId, amount, paymentKey);			return new BaseResponse<>(paymentResDto);		} catch (ResponseException e) {			return new BaseResponse<>(e.getErrorCode(), e.getMessage());		} catch (Exception e) {			return new BaseResponse<>(ResponseCode.INTERNAL_SERVER_ERROR, e.getMessage());		}	}}