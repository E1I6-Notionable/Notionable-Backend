package com.e1i6.notionable.global.auth;import java.util.Optional;import org.springframework.security.core.authority.AuthorityUtils;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.e1i6.notionable.domain.user.entity.Role;import com.e1i6.notionable.domain.user.entity.User;import com.e1i6.notionable.domain.user.repository.UserRepository;import lombok.RequiredArgsConstructor;@Service@RequiredArgsConstructor@Transactional(readOnly = true) // 이 class의 모든 method가 읽기 전용 transaction으로 실행public class UserDetailServiceImpl implements UserDetailsService {	private final UserRepository userRepository;	// 사용자 이름(userId)을 기반으로 사용자 상세 정보 조회	@Override	public UserDetails loadUserByUsername(String userId) throws UsernameNotFoundException {		// userId 기반 사용자 정보 조회		Optional<User> userInfo = userRepository.findById(Long.parseLong(userId));		if (userInfo.isPresent()) {			User user = userInfo.get();			return org.springframework.security.core.userdetails.User				.withUsername(userId) // user의 이름 설정				.password(user.getPassword()) // user의 비밀번호 설정				.authorities(AuthorityUtils.createAuthorityList(Role.ROLE_USER.value())) // user의 권한 설정(ROLE_USER 권한 리스트 생성)				.build(); // UserDetails 객체 생성 및 반환		}		return null;	}}